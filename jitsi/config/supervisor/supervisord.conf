[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid

# =============================================================================
# CONFIGURACIÓN DE SUPERVISOR PARA JITSI MEET
# =============================================================================
# Este archivo configura supervisor para gestionar los procesos de Jitsi Meet
# 
# ALTERNATIVAS PARA VERIFICACIÓN DE PROCESOS (cuando 'ps' no está disponible):
# 1. Verificar logs: tail -f /var/log/supervisor/supervisord.log
# 2. Verificar señales: kill -0 <PID> (retorna 0 si proceso existe)
# 3. Verificar puertos: netstat -tulpn | grep :PORT
# 4. Verificar archivos PID: test -f /var/run/supervisord.pid
# 5. Verificar estado HTTP: curl -f http://localhost:8080/ || exit 1
# =============================================================================

[program:prosody]
command=/usr/bin/prosody
autostart=true
autorestart=true
stdout_logfile=/var/log/prosody/prosody.log
stderr_logfile=/var/log/prosody/prosody-error.log
user=prosody
# HEALTHCHECK ALTERNATIVO: curl -f http://localhost:5280/http-bind/ || exit 1
# VERIFICAR PROCESO: kill -0 $(cat /var/run/prosody/prosody.pid) 2>/dev/null || exit 1

[program:jicofo]
command=/usr/share/jicofo/jicofo.sh
autostart=true
autorestart=true
stdout_logfile=/var/log/jicofo/jicofo.log
stderr_logfile=/var/log/jicofo/jicofo-error.log
user=jicofo
# HEALTHCHECK ALTERNATIVO: Verificar logs sin errores fatales
# VERIFICAR PROCESO: kill -0 $(pgrep -f jicofo) 2>/dev/null || exit 1

[program:jvb]
command=/usr/share/jitsi-videobridge/jvb.sh
autostart=true
autorestart=true
stdout_logfile=/var/log/jitsi-videobridge/jvb.log
stderr_logfile=/var/log/jitsi-videobridge/jvb-error.log
user=jvb
# HEALTHCHECK ALTERNATIVO: curl -f http://localhost:8080/about/health || exit 1
# VERIFICAR PROCESO: kill -0 $(pgrep -f jitsi-videobridge) 2>/dev/null || exit 1

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
autostart=true
autorestart=true
stdout_logfile=/var/log/nginx/access.log
stderr_logfile=/var/log/nginx/error.log
# HEALTHCHECK ALTERNATIVO: curl -f http://localhost:8080/ || exit 1
# VERIFICAR PROCESO: kill -0 $(pgrep -f nginx) 2>/dev/null || exit 1

